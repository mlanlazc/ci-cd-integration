name: Sync SDK with new API changes

on:
  push:
    branches:
      - main

jobs:
  sync-sdk-with-api-changes:
    if: github.event.head_commit.message != 'Update downloaded API spec' && github.event.head_commit.message != 'Bump sdk version'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.LIBLAB_GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Compare and update API spec
        id: api-sync
        env:
          API_URL: https://ci-cd-integration.onrender.com
        run: |
          # Download API spec
          curl -s $API_URL/openapi-json > sdk-control/api.json.new
          
          # Compare with existing spec if it exists
          if [ -f sdk-control/api.json ]; then
            if diff -q sdk-control/api.json sdk-control/api.json.new > /dev/null; then
              echo "spec_changed=false" >> "$GITHUB_OUTPUT"
              rm sdk-control/api.json.new
            else
              echo "spec_changed=true" >> "$GITHUB_OUTPUT"
              mv sdk-control/api.json.new sdk-control/api.json
            fi
          else
            echo "spec_changed=true" >> "$GITHUB_OUTPUT"
            mv sdk-control/api.json.new sdk-control/api.json
          fi

      - name: Commit updated API spec
        if: steps.api-sync.outputs.spec_changed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add sdk-control/api.json
          git commit -m "Update downloaded API spec"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Install liblab
        if: steps.api-sync.outputs.spec_changed == 'true'
        run: |
          npm install -g liblab

      - name: Bump version
        if: steps.api-sync.outputs.spec_changed == 'true'
        run: |
          cd sdk-control
          # Get current version
          CURRENT_VERSION=$(jq -r '.apiVersion' liblab.config.json)
          # Split version into parts
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          # Increment patch version
          NEW_VERSION="$major.$minor.$((patch + 1))"
          # Update version in config
          jq --arg v "$NEW_VERSION" '.apiVersion = $v | .languageOptions.python.sdkVersion = $v' liblab.config.json > temp.json && mv temp.json liblab.config.json

      - name: Build SDK
        if: steps.api-sync.outputs.spec_changed == 'true'
        env:
          LIBLAB_TOKEN: ${{ secrets.LIBLAB_TOKEN }}
        run: |
          cd sdk-control
          liblab build

      - name: Commit version bump
        if: steps.api-sync.outputs.spec_changed == 'true'
        run: |
          cd sdk-control
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add liblab.config.json
          git commit -m "Bump sdk version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Publish a PR
        if: steps.api-sync.outputs.spec_changed == 'true'
        env:
          LIBLAB_GITHUB_TOKEN: ${{ secrets.LIBLAB_GITHUB_TOKEN }}
          LIBLAB_TOKEN: ${{ secrets.LIBLAB_TOKEN }}
        run: |
          cd sdk-control
          liblab pr
          